import { Injectable } from "@nestjs/common";
import { <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %> } from "./<%= entityName %>.model";

@Injectable()
export class <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %>Service {
  private items: <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %>[] = [];

  findAll(): <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %>[] {
    return this.items;
  }

  create(data: <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %>): <%= entityName.charAt(0).toUpperCase() + entityName.slice(1) %> {
    // Auto-generate UUID for id if not present
    if (!data.id) {
      data.id = this.generateUUID();
    }
    this.items.push(data);
    return data;
  }

  private generateUUID(): string {
    // Simple UUID v4 generator
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
      const r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);
      return v.toString(16);
    });
  }
}